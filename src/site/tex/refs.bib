
@article{gao_link_2015,
	title = {Link {Prediction} {Methods} and {Their} {Accuracy} for {Different} {Social} {Networks} and {Network} {Metrics}},
	volume = {2015},
	issn = {1058-9244, 1875-919X},
	url = {http://www.hindawi.com/journals/sp/2015/172879/},
	doi = {10.1155/2015/172879},
	abstract = {Currently, we are experiencing a rapid growth of the number of social–based online systems. The availability of the vast amounts of data gathered in those systems brings new challenges that we face when trying to analyse it. One of the intensively researched topics is the prediction of social connections between users. Although a lot of eﬀort has been made to develop new prediction approaches that could provide a better prediction accuracy in social networked structures extracted from large–scale data about people and their activities and interactions, the existing methods are not comprehensively analysed. Presented in this paper, research focuses on the link prediction problem in which in a systematic way, we investigate the correlation between network metrics and accuracy of diﬀerent prediction methods. For this study we selected six time–stamped real world social networks and ten most widely used link prediction methods. The results of our experiments show that the performance of some methods have a strong correlation with certain network metrics. We managed to distinguish ’prediction friendly’ networks, for which most of the prediction methods give good performance, as well as ’prediction unfriendly’ networks, for which most of the methods result in high prediction error. The results of the study are a valuable input for development of a new prediction approach which may be for example based on combination of several existing methods. Correlation analysis between network metrics and prediction accuracy of diﬀerent methods may form the basis of a metalearning system where based on network characteristics and prior knowledge will be able to recommend the right prediction method for a given network at hand.},
	language = {en},
	urldate = {2019-06-04},
	journal = {Scientific Programming},
	author = {Gao, Fei and Musial, Katarzyna and Cooper, Colin and Tsoka, Sophia},
	year = {2015},
	pages = {1--13},
	file = {Gao et al. - 2015 - Link Prediction Methods and Their Accuracy for Dif.pdf:C\:\\Users\\marco\\Zotero\\storage\\L7VEY3JS\\Gao et al. - 2015 - Link Prediction Methods and Their Accuracy for Dif.pdf:application/pdf}
}

@book{wikipedia_soziale_2019,
	title = {Soziale {Netzwerkanalyse}},
	url = {https://de.wikipedia.org/w/index.php?title=Soziale_Netzwerkanalyse&oldid=189030424},
	abstract = {Die soziale Netzwerkanalyse ist eine Methode der empirischen Sozialforschung zur Erfassung und Analyse sozialer Beziehungen und sozialer Netzwerke. Die soziale Netzwerkanalyse propagiert eine bestimmte Sichtweise auf soziale Phänomene, die deren relationalen Charakter betont. Verbindungen und Interdependenzen zwischen Einheiten (beispielsweise Personen oder Organisationen) stehen im Vordergrund, nicht deren individuelle Attribute und Eigenschaften. Soziale Beziehungen und deren Struktur werden so zur Analyseeinheit selbst. Dies bildet den Unterschied zur klassischen Variablenpsychologie. Die Soziale Netzwerkanalyse beschreibt dementsprechend einen relationalen Forschungsansatz.},
	language = {de},
	urldate = {2019-06-04},
	publisher = {https://de.wikipedia.org /wiki/Soziale\_Netzwerkanalyse},
	author = {Wikipedia},
	month = may,
	year = {2019},
	note = {(aufgerufen am 4.6.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\XVNS84WS\\index.html:text/html}
}

@book{ulrike_baumol_soziale_2019,
	title = {Soziale {Netzwerkanalyse}},
	url = {http://www.enzyklopaedie-der-wirtschaftsinformatik.de/lexikon/daten-wissen/Wissensmanagement/Soziales-Netzwerk/Soziale-Netzwerkanalyse},
	urldate = {2019-06-04},
	publisher = {http://www. enzyklopaedie-der-wirtschaftsinformatik.de/lexikon/daten-wissen/Wissensmanagement/Soziales-Netzwerk/Soziale-Netzwerkanalyse},
	author = {Ulrike Baumöl, Henrick Ickler},
	month = feb,
	year = {2019},
	note = {(aufgerufen am 4.6.2019)},
	file = {Soziale Netzwerkanalyse — Enzyklopaedie der Wirtschaftsinformatik:C\:\\Users\\marco\\Zotero\\storage\\53397HLS\\Soziale-Netzwerkanalyse.html:text/html}
}

@book{ottmann_algorithmen_2017,
	address = {Wiesbaden},
	edition = {6. Auflage},
	title = {Algorithmen und {Datenstrukturen}},
	isbn = {978-3-662-55649-8 978-3-662-55650-4},
	language = {ger},
	publisher = {Springer Vieweg},
	author = {Ottmann, Thomas and Widmayer, Peter},
	year = {2017}
}

@book{michael_henninger_soziale_2018,
	address = {Brugg},
	title = {Soziale {Netzwerkanalyse}},
	publisher = {Fachhochschule Nordwestschweiz},
	author = {Michael Henninger},
	year = {2018},
	file = {SNA Script 3.3.pdf:C\:\\Users\\marco\\Zotero\\storage\\CIRUAEAE\\SNA Script 3.3.pdf:application/pdf}
}

@book{moll_datasets_2018,
	title = {Datasets {Gephi} {Wiki}},
	url = {https://github.com/gephi/gephi/wiki/Datasets},
	urldate = {2019-06-09},
	publisher = {https://github.com /gephi/gephi/wiki/Datasets},
	author = {Moll, Mark},
	month = jan,
	year = {2018},
	note = {(aufgerufen am 9.6.2019)},
	file = {Datasets · gephi/gephi Wiki:C\:\\Users\\marco\\Zotero\\storage\\SQ88HJ5W\\Datasets.html:text/html}
}

@misc{noauthor_abstract_2013,
	title = {Abstract {Factory} {Design} {Pattern} {Example}},
	url = {http://www.hsufengko.com/1/post/2013/06/abstract-factory-design-pattern-example.html},
	abstract = {What is Abstract Factory pattern and what is it for? According to  Design Patterns by GoF , the intent of Abstract Factory is to,},
	language = {en},
	urldate = {2019-06-10},
	journal = {Software Development, Product to Market},
	month = jun,
	year = {2013},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\ZVQNUCVQ\\abstract-factory-design-pattern-example.html:text/html}
}

@misc{noauthor_generalized-functors-realizing-command-design-pattern--c-18-728.jpg_nodate,
	title = {generalized-functors-realizing-command-design-pattern-in-c-18-728.jpg (728×546)},
	url = {https://image.slidesharecdn.com/generalizedfunctors-12659949776638-phpapp01/95/generalized-functors-realizing-command-design-pattern-in-c-18-728.jpg?cb=1265973663},
	urldate = {2019-06-10},
	file = {generalized-functors-realizing-command-design-pattern-in-c-18-728.jpg (728×546):C\:\\Users\\marco\\Zotero\\storage\\63SSVXUD\\generalized-functors-realizing-command-design-pattern-in-c-18-728.html:text/html}
}

@misc{noauthor_composite_2019,
	title = {Composite pattern},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Composite_pattern&oldid=887913926},
	abstract = {In software engineering, the composite pattern is a partitioning design pattern. The composite pattern describes a group of objects that is treated the same way as a single instance of the same type of object. The intent of a composite is to "compose" objects into tree structures to represent part-whole hierarchies. Implementing the composite pattern lets clients treat individual objects and compositions uniformly.},
	language = {en},
	urldate = {2019-06-10},
	journal = {Wikipedia},
	month = mar,
	year = {2019},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\CE6WID4M\\index.html:text/html}
}

@book{github_licenses_nodate,
	title = {Licenses},
	url = {https://choosealicense.com/licenses/},
	abstract = {Non-judgmental guidance on choosing a license for your open source project},
	language = {en},
	urldate = {2019-07-27},
	publisher = {https://choosealicense.com /licenses/},
	author = {GitHub},
	note = {(aufgerufen am 27.7.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\QWVLB7E8\\licenses.html:text/html}
}

@book{garcia-gasulla_pdf_2014,
	title = {{Link} {Prediction} in {Very} {Large} {Directed} {Graphs}},
	shorttitle = {{Link} {Prediction} in {Very} {Large} {Directed} {Graphs}},
	url = {https://www.researchgate.net/publication/261587508_Link_Prediction_in_Very_Large_Directed_Graphs_Exploiting_Hierarchical_Properties_in_Parallel},
	abstract = {Link prediction is a link mining task that tries to find new edges within a given graph. Among the targets of link prediction there is large directed graphs, which are frequent structures nowadays. The typical sparsity of large graphs demands of high precision predictions in order to obtain usable results. However, the size of those graphs only permits the execution of scalable algorithms. As a trade-off between those two problems we recently proposed a link prediction algorithm for directed graphs that exploits hierarchical properties. The algorithm can be classified as a local score, which entails scalability. Unlike the rest of local scores, our proposal assumes the existence of an underlying model for the data which allows it to produce predictions with a higher precision. We test the validity of its hierarchical assumptions on two clearly hierarchical data sets, one of them based on RDF. Then we test it on a non-hierarchical data set based on Wikipedia to demonstrate its broad applicability. Given the computational complexity of link prediction in very large graphs we also introduce some general recommendations useful to make of link prediction an efficiently parallelized problem.},
	language = {en},
	urldate = {2019-08-13},
	journal = {ResearchGate},
	author = {Garcia-Gasulla, Dario and Cortés, Ulises},
	publisher = {Universitat Politècnica de Catalunya},
	month = apr,
	address = {Barcelona},
	year = {2014},
	file = {Snapshot:C\:\\Users\\Saskia\\Zotero\\storage\\IFE4MGAE\\261587508_Link_Prediction_in_Very_Large_Directed_Graphs_Exploiting_Hierarchical_Properties_in_P.html:text/html}
}

@book{wikipedia_comparison_2019,
	title = {Comparison of free and open-source software licenses},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://en.wikipedia.org/w/index.php?title=Comparison_of_free_and_open-source_software_licenses&oldid=905273408},
	abstract = {This is a comparison of free and open-source software licenses. The comparison only covers software licenses with a linked article for details, approved by at least one expert group at the FSF, the OSI, the Debian project or the Fedora project. For a list of licenses not specifically intended for software, see List of free content licenses.},
	language = {en},
	urldate = {2019-07-27},
	publisher = {https://en.wikipedia.org/wiki/Comparison\_of\_free\_and\_open-source\_software\_licenses},
	author = {Wikipedia},
	month = jul,
	year = {2019},
	note = {(aufgerufen am 27.7.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\KQGQJ2XU\\index.html:text/html}
}

@book{wikipedia_plug-_2019,
	title = {Plug-in},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Plug-in&oldid=190833539},
	abstract = {Ein Plug-in [ˈplʌgɪn] (häufig auch Plugin; von engl. to plug in, „einstöpseln, anschließen“, auch Software-Erweiterung oder Zusatzmodul) ist eine optionale Software-Komponente, die eine bestehende Software oder Computerspiel erweitert bzw. verändert. Der Begriff wird teilweise auch als Synonym zu „Add-on“ und „Add-in“ benutzt. Plug-ins werden meist vom Benutzer installiert und dann von der entsprechenden Hauptanwendung während der Laufzeit eingebunden. Plug-ins können nicht ohne die Hauptanwendung ausgeführt werden.},
	language = {de},
	urldate = {2019-07-29},
	publisher = {https://de.wikipedia.org /wiki/Plug-in},
	author = {Wikipedia},
	month = jul,
	year = {2019},
	note = {(aufgerufen am 29.7.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\QB9TNRHY\\index.html:text/html}
}

@book{wikipedia_kompositum_2019,
	title = {Kompositum ({Entwurfsmuster})},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Kompositum_(Entwurfsmuster)&oldid=187801649},
	abstract = {Das Kompositum (englisch composite oder whole-part) ist ein Entwurfsmuster aus dem Bereich der Softwareentwicklung, das zur Kategorie der Strukturmuster (englisch structural patterns) gehört. Es ist ein so genanntes GoF-Entwurfsmuster. Das Kompositionsmuster (composite pattern) wird angewendet, um Teil-Ganzes-Hierarchien zu repräsentieren, indem Objekte zu Baumstrukturen zusammengefügt werden. Die Grundidee des Kompositionsmusters ist, in einer abstrakten Klasse sowohl primitive Objekte als auch ihre Behälter zu repräsentieren. Somit können sowohl einzelne Objekte als auch ihre Kompositionen einheitlich behandelt werden.},
	language = {de},
	urldate = {2019-07-30},
	publisher = {https://de.wikipedia .org/wiki/Kompositum\_(Entwurfsmuster)},
	author = {Wikipedia},
	month = apr,
	year = {2019},
	note = {(aufgerufen am 30.7.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\54B2N9WV\\index.html:text/html}
}

@book{wikipedia_schablonenmethode_2018,
	title = {Schablonenmethode},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Schablonenmethode&oldid=177119662},
	abstract = {Die Schablonenmethode (englisch template method pattern) ist ein in der Softwareentwicklung eingesetztes Entwurfsmuster, mit dem Teilschritte eines Algorithmus variabel gehalten werden können. Es gehört zur Kategorie der Verhaltensmuster (engl. behavioral patterns). Das Muster ist eines der sogenannten Viererbanden-Entwurfsmuster (GoF).},
	language = {de},
	urldate = {2019-07-30},
	publisher = {https://de.wikipedia.org /wiki/Schablonenmethode},
	author = {Wikipedia},
	month = may,
	year = {2018},
	note = {(aufgerufen am 30.07.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\ZIC36J9K\\index.html:text/html}
}

@book{wikipedia_abstrakte_2018,
	title = {Abstrakte {Fabrik}},
	copyright = {Creative Commons Attribution-ShareAlike License},
	url = {https://de.wikipedia.org/w/index.php?title=Abstrakte_Fabrik&oldid=183961007},
	abstract = {Die abstrakte Fabrik (englisch abstract factory, kit) ist ein Entwurfsmuster aus dem Bereich der Softwareentwicklung, das zur Kategorie der Erzeugungsmuster (englisch creational patterns) gehört. Es definiert eine Schnittstelle zur Erzeugung einer Familie von Objekten, wobei die konkreten Klassen der zu instanziierenden Objekte nicht näher festgelegt werden. Das Muster ist eines der Entwurfsmuster, die von der sogenannten Viererbande (GoF) publiziert wurden.},
	language = {de},
	urldate = {2019-07-30},
	publisher = {https://de.wikipedia.org /wiki/Abstrakte\_Fabrik},
	author = {Wikipedia},
	month = dec,
	year = {2018},
	note = {(aufgerufen am 30.7.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\BYF4QGXR\\index.html:text/html}
}

@book{tutorialspoint_log4j_nodate,
	title = {Log4j {Logging} {Levels}},
	url = {https://www.tutorialspoint.com/log4j/log4j_logging_levels},
	abstract = {log4j Logging Levels - Learn how log4j framework works starting from environment setup, logging levels, methods, formatting, methods, file logging and database logging.},
	urldate = {2019-07-30},
	publisher = {https://www.tutorialspoint.com /log4j/log4j\_logging\_levels},
	author = {Tutorialspoint},
	note = {(aufgerufen am 30.7.2019)},
	file = {Snapshot:C\:\\Users\\marco\\Zotero\\storage\\5U6738QN\\log4j_logging_levels.html:text/html}
}

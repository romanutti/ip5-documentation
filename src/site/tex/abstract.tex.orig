% Set abstract title
\renewcommand*\abstractname{Summary}
\begin{abstract}
  Gephi ist eine Open-Source Software zur explorativen Analyse von Graphen.
  Die Software wird unter anderem im Modul \acl{sna} (\acs{sna}), welches an der Fachhochschule Nordwestschweiz unterrichtet wird, eingesetzt.
  Gephi ist modular aufgebaut und kann um eigene Plugins erweitert werden.
  Um neue Kanten in einem bestehenden Netzwerk vorhersagen zu können, soll nun ein solches Plugin entwickelt werden.
  Die Vorhersage neuer Kanten (sog. ``Link Prediction'') kann mittels verschiedener Algorithmen berechnet werden.
  In einer ersten Version wurden die Algorithmen ``Common Neighbours'' und ``Preferential Attachment'' implementiert.
  Der Aufbau des Plugins soll es erlauben, einfach neue Algorithmen hinzuzufügen.
  Nebst der Vorhersage neuer Kanten soll die Qualität der eingesetzten Link-Prediction-Algorithmen beurteilt werden können.
  Als Messgrösse wird hierfür die Accuracy verwendet, welche den prozentualen Anteil richtig vorausgesagter Kanten berechnet.

  Um die Verhaltensweise und Qualität der Algorithmen vergleichen zu können, wurden diese auf unterschiedliche Datensets angewandt.
  Die Gegenüberstellung zeigt, dass sich die beiden Algorithmen mehrheitlich ähnlich verhalten:
  Bei den von uns verwendeten Datensets sind die Vorhersagen da am genauesten, wo die Knoten im Graphen untereinander am stärksten verknüpft sind.
  Ob effektiv eine Korrelation vorliegt, müsste mit weiteren Netzwerken und grösseren Datenmengen überprüft werden.

  Die Durchführbarkeit und Korrektheit der Konzepte für das Plugin wurde mittels eines Proof of Concepts geprüft.
  Die daraus gewonnenen Erkenntnisse wurden in die anschliessende Umsetzung übernommen.
  Die erforderlichen Funktionalitäten des Plugins konnten umgesetzt werden.
  Das Plugin kann weiter verbessert werden, indem gerichtete und auch gewichtete Graphen unterstützt werden.
  Aktuell kann ausserdem nur für Netzwerke mit bis zu 1000 Knoten eine schnelle Laufzeit garantiert werden.
  Um auch bei grösseren Netzwerken eine schnellere Performance zu erreichen, müssten weitere Optimierungsmassnahmen in Betracht gezogen werden.
\end{abstract}
